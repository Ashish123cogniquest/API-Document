import base64
import os
import traceback
import time
#import generatePassword
import shutil
import subprocess, shlex
import uuid
import time
import random
import shelve
import dateutil
import pandas as pd
import itertools
from datetime import date
from datetime import datetime, timedelta
from random import randint
sys.path.insert(0, '/home/azureuser/co_dev/')
import send_mail
from utils.config import db_str_mysql, db_str_mysql_new, db_str_mongo,DB_CONNECTION_STR_UPDATED
from utils.config import db_str_mysql
sys.path.append('db_mgmt')
import mongo_methods
import table_paginate
import dbApi

from collections import OrderedDict
#db_str_mysql = "localhost#ai-user#sWS6eKC6h4rA22Dv#inforef_table_extraction"
#OPATH = '/var/www/html/iTe/output/'
import random
import string

def sign_in(data_dict):
    #time.sleep(5)
    email = data_dict.get('email', None)
    stype = data_dict.get('type', None)
    p_password = data_dict.get('password', None)
    def_dict = {'uid': '', 'p_status': 'Input Error', 'email': ''}
    if ((not email) or (not p_password)):
       return def_dict
    args = [email, p_password, 'p_userID', 'p_responseMessage']
    res = dbApi.call_proc(db_str_mysql, args, 'userLogin', 2, 4)
    if not res:
       return def_dict

    def_dict['p_status'] = res[1]
    if not res[0]:
       return def_dict

    def_dict['uid'] = res[0]

    p_code = dbApi.getPCode(db_str_mysql, def_dict['uid'])
    if res[1] == 'Validate Email':
       send_mail.send_mail(email, p_code)

    def_dict['email'] = email
    fullname = dbApi.getFullName(db_str_mysql, def_dict['uid'])
    def_dict['fullname'] = fullname
    user_role = dbApi.get_user_role(db_str_mysql, res[0])[0]

    def_dict['flag'] = user_role
    return def_dict
